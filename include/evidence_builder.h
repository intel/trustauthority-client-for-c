/*
 * Copyright (C) 2024 Intel Corporation
 * SPDX-License-Identifier: BSD-3-Clause
 */
#ifndef __EVIDENCE_BUILDER_H__
#define __EVIDENCE_BUILDER_H__

#include "types.h"
#include <stdbool.h>

#ifdef __cplusplus
extern "C"
{
#endif

	typedef struct evidence_builder evidence_builder; /* Forward declaration */

	// builder_opts holds the request parameters needed for getting token from Intel Trust Authority
	typedef struct builder_opts {
		nonce *nonce;
		uint8_t *user_data;
		uint32_t user_data_len;
		char *policy_ids;
		char *token_signing_alg;
		bool policy_must_match;
	} builder_opts;

	/**
	 * Create a new evidence builder to build composite evidence for Intel Trust Authority
	 * @param opts containing builder options for building composite evidence
	 * @return return status
	 */
	TRUST_AUTHORITY_STATUS evidence_builder_new(evidence_builder **builder,
			builder_opts* opts);

	/**
	 * Adds an evidence adapter to evidence builder.
	 * @param builder evidence builder instance to add evidence adapter
	 * @param adapter evidence adapter to be added to builder
	 * @return return status
	 */
	TRUST_AUTHORITY_STATUS evidence_builder_add_adapter(evidence_builder *builder,
			evidence_adapter *adapter);

	/**
	 * Builds a composite evidence using evidence adapters.
	 * @param builder evidence builder instance with evidence adapters added
	 * @param evidence composite evidence generated by builder
	 * @return return status
	 */
	TRUST_AUTHORITY_STATUS evidence_builder_get_evidence(evidence_builder *builder,
			json_t *evidence);

	// Delete/free evidence builder
	TRUST_AUTHORITY_STATUS evidence_builder_free(evidence_builder *builder);

#ifdef __cplusplus
}
#endif

#endif // __EVIDENCE_BUILDER_H__
