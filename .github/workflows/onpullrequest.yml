name: OnPullRequest

on:
  pull_request:

permissions: read-all

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      runner: ${{ steps.step1.outputs.runner }}
    steps:
      - name: Check repository
        id: step1
        run: |
          if [ "${{ github.repository }}" == 'intel/trustauthority-client-for-c' ]; then
            echo "runner=ubuntu-latest" >> $GITHUB_OUTPUT
          else
            echo "runner=self-hosted" >> $GITHUB_OUTPUT
          fi

  security-file-check:
    needs: [setup]
    runs-on: ${{ needs.setup.outputs.runner }}
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          fetch-depth: 0

      - name: Check Security.md file
        run: |
          if [ ! -f ./security.md ]; then
            echo "Security.md file is missing"
            exit 1
          fi

  build-test:
    needs: [setup]
    runs-on: ${{ needs.setup.outputs.runner }}
    env:
      http_proxy: ${{ secrets.HTTP_PROXY }}
      https_proxy: ${{ secrets.HTTPS_PROXY }}
      no_proxy: ${{ secrets.NO_PROXY }}
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          fetch-depth: 0

      - name: Build libraries and examples
        run: make all

      - name: Unit Test Coverage
        run: |
          test_output=$(make test-coverage)
          if [ $? -ne 0 ]; then
            echo "Unit tests failed"
            exit 1
          fi
          COVERAGE=$(make test-coverage | grep 'Total:|' | awk -F\| '{print $2}' | awk -F. '{print $1}')
          echo "Unit test coverage for Client is - $COVERAGE%"
          if [[ $COVERAGE -lt 70 ]]; then
            echo "Unit test coverage must be above 70%"
            exit 1
          fi
